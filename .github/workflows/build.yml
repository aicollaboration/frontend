name: Frontend

on:
  push:
    branches: [vishnutesting]
  pull_request:
    branches: [vishnutesting]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Configure Git
        run: |
          git config user.name "${{ github.repository_owner }}"
          git config user.email "${{ github.repository_owner }}@users.noreply.github.com"
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: aipioneers
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: aicollaboration/frontend:latest
    

  deploy:
     runs-on: ubuntu-latest
     needs: [build]
    
     steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Get tag name
        id: tagName
        uses: olegtarasov/get-tag@v2
          
      - name: Set up kubectl
        uses: matootie/dokube@v1.4.0
        with:
          personalAccessToken: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          clusterName: k8s-1-24-4-do-0-fra1-1669239908785

      - name: Shell
        run: |
          pwd
          ls -ltr
          sed -i "s/<VERSION>/${{ steps.tagName.outputs.tag }}/g" devops/kubernetes/deployment-solution.yml
      
      - name: Debug
        run: cat devops/kubernetes/deployment-solution.yml
      
      - name: k8s deployment
        run: |
           kubectl apply -f devops/kubernetes/api-ingress-solution.yml
           kubectl apply -f devops/kubernetes/deployment-solution.yml
           kubectl apply -f devops/kubernetes/service-solution.yml
       
      - name: Get nodes
        run: kubectl get all
        
  slack-notification:
       runs-on: ubuntu-latest
       needs: [build,deploy]
       steps:
        - name: Report Status
          if: always()
          uses: ravsamhq/notify-slack-action@master
          with:
            status: ${{ job.status }}
          env:
            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
            channel_name: github-notification
          
      
